name: Run linters and tests
on:
  pull_request:
    paths:
      - '**/*.py'
      - 'poetry.lock'
      - 'pyproject.toml'
      - '.github/workflows/python-check.yml'
    branches:
      - master
      - dev
      - release/*

jobs:
  lint:
    name: "Run linters"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
        poetry-version: [ "1.8.5" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry==${{matrix.poetry-version}}
      - name: "Setup Python ${{matrix.python-version}}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
          cache: 'poetry'
      - name: Install dependencies
        run: make install
      - name: Run flake8
        run: make flake
      - name: Run mypy
        run: make mypy
      - name: Run black lint
        run: make black-lint
      - name: Lint documentation
        run: make doc-lint
  test:
    name: "Run tests"
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
        poetry-version: [ "1.8.5" ]
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Poetry ${{matrix.poetry-version}}
        run: pipx install poetry==${{matrix.poetry-version}}
      - name: Setup Python ${{matrix.python-versions}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python-version}}
          cache: "poetry"
      - name: Install dependencies
        run: make install
      - name: Run pytest
        run: make test
      - name: "Upload coverage reports to Codecov"
        if: matrix.python-version == '3.13' && matrix.os == 'ubuntu-latest' && github.actor != 'dependabot[bot]'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
